{
  "swagger": "2.0",
  "info": {
    "description": "Documentation for CleanUP REST API",
    "version": "1.0.0",
    "title": "CleanUp system API"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "Authorization",
      "description": "Auth Controller"
    },
    {
      "name": "Cleaning Company",
      "description": "Cleaning Company Controller"
    },
    {
      "name": "Customer Company",
      "description": "Customer Company Controller"
    },
    {
      "name": "Role",
      "description": "Role Controller"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Performs user login to the system",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loginDto",
            "description": "loginDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/auth/register/cleaning-company": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Registers a new cleaning company",
        "operationId": "registerCleaningCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cleaningCompanyDto",
            "description": "cleaningCompanyDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CleaningCompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/auth/register/customer-company": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Registers a new customer company",
        "operationId": "registerCustomerCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerCompanyDto",
            "description": "customerCompanyDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cleaning-companies": {
      "get": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Returns a list of all cleaning companies",
        "operationId": "getAllCleaningCompanies",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CleaningCompanyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Adds new cleaning company",
        "operationId": "addCleaningCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cleaningCompanyDto",
            "description": "cleaningCompanyDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CleaningCompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Updates the cleaning company",
        "operationId": "updateCleaningCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cleaningCompanyDto",
            "description": "cleaningCompanyDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CleaningCompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cleaning-companies/cleaning-services/{id}": {
      "get": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Finds cleaning service by id",
        "operationId": "getCleaningServiceById",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Deletes cleaning service by ID",
        "operationId": "deleteCleaningService",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cleaning-companies/{email}": {
      "get": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Finds cleaning company by email",
        "operationId": "getCleaningCompanyByEmail",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Deletes cleaning company by email",
        "operationId": "deleteCleaningCompany",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cleaning-companies/{email}/cleaning-services": {
      "get": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Returns all cleaning company services (offers)",
        "operationId": "getAllCleaningServices",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Adds new cleaning service for cleaning company",
        "operationId": "addCleaningService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cleaningServiceDto",
            "description": "cleaningServiceDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CleaningServiceDto"
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "Cleaning Company"
        ],
        "summary": "Updates cleaning service of cleaning company (service ID must be present!)",
        "operationId": "updateCleaningService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cleaningServiceDto",
            "description": "cleaningServiceDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CleaningServiceDto"
            }
          },
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-companies": {
      "get": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Returns a list of all customer companies",
        "operationId": "getAllCustomerCompanies",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerCompanyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Adds new customer company",
        "operationId": "addCustomerCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerCompanyDto",
            "description": "customerCompanyDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Updates the customer company",
        "operationId": "updateCustomerCompany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customerCompanyDto",
            "description": "customerCompanyDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerCompanyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-companies/rooms/{id}": {
      "get": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Finds room by id",
        "operationId": "getRoomById",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Deletes room by ID",
        "operationId": "deleteRoom",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-companies/{email}": {
      "get": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Finds customer company by email",
        "operationId": "getCustomerCompanyByEmail",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Deletes customer company by email",
        "operationId": "deleteCustomerCompany",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-companies/{email}/rooms": {
      "get": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Returns all customer company rooms ",
        "operationId": "getAllRooms",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Adds new room for customer company",
        "operationId": "addRoom",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "roomDto",
            "description": "roomDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoomDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "Customer Company"
        ],
        "summary": "Updates room of customer company (room id must be present)",
        "operationId": "updateRoom",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "roomDto",
            "description": "roomDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoomDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Returns a list of all roles",
        "operationId": "getAllRoles",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "AddressDto": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "houseNumber": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      },
      "title": "AddressDto"
    },
    "CleaningCompanyDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressDto"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "ADMIN",
            "CUSTOMER_COMPANY",
            "CLEANING_COMPANY"
          ]
        }
      },
      "title": "CleaningCompanyDto"
    },
    "CleaningServiceDto": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "maxArea": {
          "type": "integer",
          "format": "int32"
        },
        "minArea": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "pricePerMeter": {
          "type": "number",
          "format": "double"
        },
        "roomType": {
          "type": "string"
        }
      },
      "title": "CleaningServiceDto"
    },
    "CustomerCompanyDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressDto"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "ADMIN",
            "CUSTOMER_COMPANY",
            "CLEANING_COMPANY"
          ]
        }
      },
      "title": "CustomerCompanyDto"
    },
    "LoginDto": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "LoginDto"
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "enum": [
            "ADMIN",
            "CUSTOMER_COMPANY",
            "CLEANING_COMPANY"
          ]
        }
      },
      "title": "Role"
    },
    "RoomDto": {
      "type": "object",
      "properties": {
        "area": {
          "type": "number",
          "format": "double"
        },
        "floor": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastCleaning": {
          "type": "string",
          "format": "date-time"
        },
        "roomType": {
          "type": "string"
        },
        "smartDevice": {
          "$ref": "#/definitions/SmartDeviceDto"
        },
        "windowsCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "RoomDto"
    },
    "SmartDeviceDto": {
      "type": "object",
      "properties": {
        "adjustmentFactor": {
          "type": "number",
          "format": "double"
        },
        "airQuality": {
          "type": "number",
          "format": "double"
        },
        "humidity": {
          "type": "number",
          "format": "double"
        },
        "priority": {
          "type": "string"
        }
      },
      "title": "SmartDeviceDto"
    }
  }
}
